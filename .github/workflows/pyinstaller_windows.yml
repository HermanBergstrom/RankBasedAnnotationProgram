name: Create Windows Executeable
on: [push, pull_request, workflow_dispatch]
permissions:
    contents: write
jobs:
    build-windows:
        runs-on: windows-latest
        steps:
            - uses: actions/checkout@v3

            - name: Set up Python
              uses: actions/setup-python@v3
              with:
                  python-version: "3.10"

            - name: Install dependencies
              run: |
                  pip install -r requirements.txt
                  pip install pyinstaller

            - name: Show ctk path
              run: |
                  pip show customtkinter

            #Path should be fetched dynamically if possible...
            - name: Run PyInstaller
              run: |
                  pyinstaller --noconfirm --onedir --windowed --add-data "c:\hostedtoolcache\windows\python\3.10.11\x64\lib\site-packages\customtkinter;customtkinter\" --add-data "src/prompts.json;." src/main.py;

            - uses: actions/upload-artifact@v3
              with:
                  name: windows-executeable
                  path: dist/main

            - name: Minor version for each merge
              id: taggerDryRun
              uses: anothrNick/github-tag-action@1.67.0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  WITH_V: true
                  DRY_RUN: true

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              if: ${{github.ref == 'refs/heads/main' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref_name }} ${{ steps.taggerDryRun.outputs.new_tag }}
                  release_name: Release ${{ steps.taggerDryRun.outputs.new_tag }}
                  body: |
                      Test Release ${{ steps.taggerDryRun.outputs.new_tag }}
                  draft: false
                  prerelease: false

            - name: Upload Release Asset
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              if: ${{github.ref == 'refs/heads/main' }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{steps.create_release.outputs.upload_url}}
                  asset_path: dist/main
                  asset_name: RankBasedAnnotationProgram
                  asset_content_type: application/zip
